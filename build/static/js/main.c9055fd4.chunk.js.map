{"version":3,"sources":["components/Profile.js","components/Statistics.js","components/FriendListItem.js","components/FriendList.js","App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","class","src","alt","followers","views","likes","Statistics","title","map","stat","label","percentage","id","FriendListItem","isOnline","width","FriendList","friends","className","friend","App","user","statisticalData","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"0aA6CeA,EA3CC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC5C,OACA,sBAAKC,MAAM,UAAX,UACI,sBAAKA,MAAM,cAAX,UACI,qBACIC,IAAKH,EACLI,IAAI,gHACJF,MAAM,WAEV,mBAAGA,MAAM,OAAT,SAAiBL,IACjB,mBAAGK,MAAM,MAAT,SAAgBJ,IAChB,mBAAGI,MAAM,WAAT,SAAqBH,OAGzB,qBAAIG,MAAM,QAAV,UACI,+BACI,sBAAMA,MAAM,QAAZ,uBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMI,eAElC,+BACI,sBAAMH,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMK,WAElC,+BACI,sBAAMJ,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMM,kB,OCA/BC,EAzBI,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOR,EAAW,EAAXA,MACxB,OAAQ,0BAASC,MAAM,aAAf,UACJ,oBAAIA,MAAM,QAAV,SAAmBO,IAEnB,oBAAIP,MAAM,YAAV,SACKD,EAAMS,KAAI,SAAAC,GAAI,OAAK,qBAAIT,MAAM,OAAV,UAChB,sBAAMA,MAAM,QAAZ,SAAqBS,EAAKC,QAC1B,uBAAMV,MAAM,aAAZ,UAA0BS,EAAKE,WAA/B,SAFsCF,EAAKG,a,OCgB5CC,EApBQ,SAAC,GAAoC,IAAlCf,EAAiC,EAAjCA,OAAQH,EAAyB,EAAzBA,KAAgBiB,GAAS,EAAnBE,SAAmB,EAATF,IAC9C,OAAQ,qBAAIZ,MAAM,OAAV,UACJ,sBAAMA,MAAM,WACZ,qBAAKA,MAAM,SAASC,IAAKH,EAAQI,IAAKP,EAAMoB,MAAM,OAClD,mBAAGf,MAAM,OAAT,SAAiBL,MAHSiB,ICWnBI,EAbI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAQ,oBAAIC,UAAU,cAAd,SACCD,EAAQT,KAAI,SAAAW,GAAM,OACf,cAAC,EAAD,CAEJrB,OAAQqB,EAAOrB,OACfH,KAAMwB,EAAOxB,MAFAwB,EAAOP,U,OCEb,SAASQ,IACpB,OAAQ,qCACR,cAAC,EAAD,CAEItB,OAAQuB,EAAKvB,OACbH,KAAM0B,EAAK1B,KACXC,IAAKyB,EAAKzB,IACVC,SAAUwB,EAAKxB,SACfE,MAAOsB,EAAKtB,OALPsB,EAAK1B,MAOd,cAAC,EAAD,CAAYY,MAAM,eAAeR,MAAOuB,IACpC,cAAC,EAAD,CAAYL,QAASA,OCd7BM,IAASC,OAAO,cAAC,IAAMC,WAAP,UAAkB,cAACL,EAAD,MAA4BM,SAASC,cAAc,W","file":"static/js/main.c9055fd4.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n    return (\r\n    <div class=\"profile\">\r\n        <div class=\"description\">\r\n            <img\r\n                src={avatar}\r\n                alt=\"Аватар пользователя\"\r\n                class=\"avatar\"\r\n            />\r\n            <p class=\"name\">{name}</p>\r\n            <p class=\"tag\">{tag}</p>\r\n            <p class=\"location\">{location}</p>\r\n        </div>\r\n\r\n        <ul class=\"stats\">\r\n            <li>\r\n                <span class=\"label\">Followers</span>\r\n                <span class=\"quantity\">{stats.followers}</span>\r\n            </li>\r\n            <li>\r\n                <span class=\"label\">Views</span>\r\n                <span class=\"quantity\">{stats.views}</span>\r\n            </li>\r\n            <li>\r\n                <span class=\"label\">Likes</span>\r\n                <span class=\"quantity\">{stats.likes}</span>\r\n            </li>\r\n        </ul>\r\n    </div>);\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n        followers: PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n        likes: PropTypes.number.isRequired,\r\n    }),\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({title, stats}) => {\r\n    return (<section class=\"statistics\">\r\n        <h2 class=\"title\">{title}</h2>\r\n\r\n        <ul class=\"stat-list\">\r\n            {stats.map(stat => (<li class=\"item\" key={stat.id}>\r\n                <span class=\"label\">{stat.label}</span>\r\n                <span class=\"percentage\">{stat.percentage}%</span>\r\n            </li>))} \r\n        </ul>\r\n    </section>);\r\n\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline, id }) => {\r\n    return (<li class=\"item\" key={id}>\r\n        <span class=\"status\"></span>\r\n        <img class=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n        <p class=\"name\">{name}</p>\r\n    </li>);\r\n};\r\n\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendListItem;","import FriendListItem from \"./FriendListItem\";\r\n\r\nconst FriendList = ({ friends }) => {\r\nreturn (<ul className=\"friend-list\" >\r\n        {friends.map(friend => ( \r\n            <FriendListItem\r\n                key={friend.id}\r\n        avatar={friend.avatar}\r\n        name={friend.name}\r\n    />\r\n        \r\n    ))}\r\n  </ul>)\r\n}\r\n\r\nexport default FriendList;\r\n\r\n","import Profile from \"./components/Profile\";\nimport user from \"./user.json\"\nimport Statistics from \"./components/Statistics\";\nimport statisticalData from \"./statistical-data.json\";\nimport FriendList from './components/FriendList';\nimport friends from './friends.json'\n\n\nexport default function App() {\n    return (<>\n    <Profile\n        key={user.name}\n        avatar={user.avatar}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n        <FriendList friends={friends}/>\n        </>)\n\n}\n\n\n\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>, document.querySelector('#root'));\n\n\n\n\n\n\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}